# criterium

Criterium measures the computation time of an expression.  It is
designed to address some of the pitfalls of benchmarking, and benchmarking on
the JVM in particular.

This includes:
  - statistical processing of multiple evaluations
  - inclusion of a warm-up period, designed to allow the JIT compiler to
    optimise its code
  - purging of gc before testing, to isolate timings from GC state prior
    to testing
  - a final forced GC after testing to estimate impact of cleanup on the
    timing results

## Usage
  (use 'criterium)
  (bench (+ 1 2) :verbose)
  (with-progress-reporting (bench (+ 1 2) :verbose))
  (report-result (benchmark (+ 1 2)) :verbose)
  (report-result (quick-bench (+ 1 2)))

## References
See http://www.ellipticgroup.com/html/benchmarkingArticle.html for a Java
benchmarking library.  The accompanying article describes many of the JVM
benchmarking pitfalls.

See http://hackage.haskell.org/package/criterion for a Haskell benchmarking
library that applies many of the same statistical techniques.


## Installation

The library can be installed through leiningen or through maven.  See http://clojars.org/criterium

Alternatively, the source code can be compiled into a jar with leiningen.

    lein jar

## Todo

Check calculation of outlier variance contriubtion.
Serial correlation detection.
Multimodal distribution detection.
Use kernel density estimators?

## License

Licensed under [EPL](http://www.eclipse.org/legal/epl-v10.html)

